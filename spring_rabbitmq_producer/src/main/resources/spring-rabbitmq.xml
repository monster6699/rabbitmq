<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">
    <!--加载配置文件-->
    <context:property-placeholder location="classpath:rabbitmq.properties"/>

    <!-- 定义rabbitmq connectionFactory -->
    <rabbit:connection-factory id="connectionFactory" host="${rabbitmq.host}"
                               port="${rabbitmq.port}"
                               username="${rabbitmq.username}"
                               password="${rabbitmq.password}"
                               virtual-host="${rabbitmq.virtual-host}"  publisher-returns="true"/>




    <!--定义管理交换机、队列-->
    <rabbit:admin connection-factory="connectionFactory"/>





<!--    &lt;!&ndash;定义持久化队列，不存在则自动创建；不绑定到交换机则绑定到默认交换机-->
<!--    默认交换机类型为direct，名字为：""，路由键为队列的名称-->
<!--    &ndash;&gt;-->
<!--    <rabbit:queue id="spring_queue" name="spring_queue" auto-declare="true"/>-->

<!--    &lt;!&ndash; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~广播；所有队列都能收到消息~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &ndash;&gt;-->
<!--    &lt;!&ndash;定义广播交换机中的持久化队列，不存在则自动创建&ndash;&gt;-->
<!--    <rabbit:queue id="spring_fanout_queue_1" name="spring_fanout_queue_1" auto-declare="true"/>-->

<!--    &lt;!&ndash;定义广播交换机中的持久化队列，不存在则自动创建&ndash;&gt;-->
<!--    <rabbit:queue id="spring_fanout_queue_2" name="spring_fanout_queue_2" auto-declare="true"/>-->

<!--    &lt;!&ndash;定义广播类型交换机；并绑定上述两个队列&ndash;&gt;-->
<!--    <rabbit:fanout-exchange id="spring_fanout_exchange" name="spring_fanout_exchange" auto-declare="true">-->
<!--        <rabbit:bindings>-->
<!--            <rabbit:binding queue="spring_fanout_queue_1"/>-->
<!--            <rabbit:binding queue="spring_fanout_queue_2"/>-->
<!--        </rabbit:bindings>-->
<!--    </rabbit:fanout-exchange>-->

<!--    &lt;!&ndash; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~通配符；*匹配一个单词，#匹配多个单词 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &ndash;&gt;-->
<!--    &lt;!&ndash;定义广播交换机中的持久化队列，不存在则自动创建&ndash;&gt;-->
<!--    <rabbit:queue id="spring_topic_queue_star" name="spring_topic_queue_star" auto-declare="true"/>-->
<!--    &lt;!&ndash;定义广播交换机中的持久化队列，不存在则自动创建&ndash;&gt;-->
<!--    <rabbit:queue id="spring_topic_queue_well" name="spring_topic_queue_well" auto-declare="true"/>-->
<!--    &lt;!&ndash;定义广播交换机中的持久化队列，不存在则自动创建&ndash;&gt;-->
<!--    <rabbit:queue id="spring_topic_queue_well2" name="spring_topic_queue_well2" auto-declare="true"/>-->

<!--    <rabbit:topic-exchange id="spring_topic_exchange" name="spring_topic_exchange" auto-declare="true">-->
<!--        <rabbit:bindings>-->
<!--            <rabbit:binding pattern="monster.*" queue="spring_topic_queue_star"/>-->
<!--            <rabbit:binding pattern="monster.#" queue="spring_topic_queue_well"/>-->
<!--            <rabbit:binding pattern="mq.#" queue="spring_topic_queue_well2"/>-->
<!--        </rabbit:bindings>-->
<!--    </rabbit:topic-exchange>-->

    <!-- confirm
    <rabbit:queue id="confirm_spring_queue" name="confirm_spring_queue" auto-declare="true" />

    <rabbit:topic-exchange name="confirm_spring_exchange" id="confirm_spring_exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding pattern="monster.confirm.#" queue="confirm_spring_queue" />
        </rabbit:bindings>
    </rabbit:topic-exchange>
    -->

    <rabbit:queue id="return_spring_queue" name="return_spring_queue" auto-declare="true" />

    <rabbit:topic-exchange name="return_spring_exchange" id="return_spring_exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding pattern="monster.return.#" queue="return_spring_queue" />
        </rabbit:bindings>
    </rabbit:topic-exchange>


    <!--定义rabbitTemplate对象操作可以在代码中方便发送消息-->
    <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory"/>
</beans>